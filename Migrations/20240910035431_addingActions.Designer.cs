// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pathfinder2E;

#nullable disable

namespace Pathfinder2E.Migrations
{
    [DbContext(typeof(CharacterSheetDbContext))]
    [Migration("20240910035431_addingActions")]
    partial class addingActions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Pathfinder2E.AbilityScore", b =>
                {
                    b.Property<int>("AbilityScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterSheetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("charisma")
                        .HasColumnType("INTEGER");

                    b.Property<int>("constitution")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dexterity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("wisdom")
                        .HasColumnType("INTEGER");

                    b.HasKey("AbilityScoreId");

                    b.HasIndex("CharacterSheetId")
                        .IsUnique();

                    b.ToTable("AbilityScores");

                    b.HasData(
                        new
                        {
                            AbilityScoreId = 1,
                            CharacterSheetId = 1,
                            charisma = 10,
                            constitution = 10,
                            dexterity = 10,
                            intelligence = 10,
                            strength = 10,
                            wisdom = 10
                        },
                        new
                        {
                            AbilityScoreId = 2,
                            CharacterSheetId = 2,
                            charisma = 10,
                            constitution = 10,
                            dexterity = 10,
                            intelligence = 10,
                            strength = 10,
                            wisdom = 10
                        },
                        new
                        {
                            AbilityScoreId = 3,
                            CharacterSheetId = 3,
                            charisma = 10,
                            constitution = 10,
                            dexterity = 10,
                            intelligence = 10,
                            strength = 10,
                            wisdom = 10
                        },
                        new
                        {
                            AbilityScoreId = 4,
                            CharacterSheetId = 4,
                            charisma = 10,
                            constitution = 10,
                            dexterity = 10,
                            intelligence = 10,
                            strength = 10,
                            wisdom = 10
                        });
                });

            modelBuilder.Entity("Pathfinder2E.CharacterSheet", b =>
                {
                    b.Property<int>("CharacterSheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("XP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("alignment")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ancestry")
                        .HasColumnType("INTEGER");

                    b.Property<int>("background")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterClass")
                        .HasColumnType("INTEGER");

                    b.Property<int>("currentHP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("freeBoosts")
                        .HasColumnType("INTEGER");

                    b.Property<string>("languages")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("maxHP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("resistanceValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("resistances")
                        .HasColumnType("TEXT");

                    b.Property<int>("size")
                        .HasColumnType("INTEGER");

                    b.Property<int>("speed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("weaknessValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("weaknesses")
                        .HasColumnType("TEXT");

                    b.HasKey("CharacterSheetId");

                    b.ToTable("CharacterSheets");

                    b.HasData(
                        new
                        {
                            CharacterSheetId = 1,
                            XP = 0,
                            alignment = 4,
                            ancestry = 1,
                            background = 27,
                            characterClass = 8,
                            currentHP = 15,
                            firstName = "Konjit",
                            freeBoosts = 0,
                            languages = "[0,1]",
                            lastName = "Munaye",
                            level = 1,
                            maxHP = 15,
                            resistanceValues = "[2,2]",
                            resistances = "[2,4]",
                            size = 0,
                            speed = 30
                        },
                        new
                        {
                            CharacterSheetId = 2,
                            XP = 0,
                            alignment = 6,
                            ancestry = 6,
                            background = 22,
                            characterClass = 1,
                            currentHP = 22,
                            firstName = "Kanandi",
                            freeBoosts = 0,
                            languages = "[0,1]",
                            lastName = "Oladoyinbo",
                            level = 1,
                            maxHP = 22,
                            size = 0,
                            speed = 25,
                            weaknessValues = "[3,2]",
                            weaknesses = "[1,2]"
                        },
                        new
                        {
                            CharacterSheetId = 3,
                            XP = 0,
                            alignment = 1,
                            ancestry = 6,
                            background = 11,
                            characterClass = 11,
                            currentHP = 14,
                            firstName = "Cris",
                            freeBoosts = 0,
                            languages = "[0,1]",
                            lastName = "Marcellus",
                            level = 1,
                            maxHP = 14,
                            size = 0,
                            speed = 25
                        },
                        new
                        {
                            CharacterSheetId = 4,
                            XP = 0,
                            alignment = 0,
                            ancestry = 6,
                            background = 28,
                            characterClass = 6,
                            currentHP = 0,
                            firstName = "Unkown",
                            freeBoosts = 0,
                            languages = "[0]",
                            lastName = "Person",
                            level = 1,
                            maxHP = 0,
                            size = 0,
                            speed = 25
                        });
                });

            modelBuilder.Entity("Pathfinder2E.Feat", b =>
                {
                    b.Property<int>("FeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterSheetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("FeatId");

                    b.HasIndex("CharacterSheetId");

                    b.ToTable("Feat");
                });

            modelBuilder.Entity("Pathfinder2E.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterSheetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Name")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemId");

                    b.HasIndex("CharacterSheetId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Pathfinder2E.Mechanics.Actions.MyAction", b =>
                {
                    b.Property<int>("MyActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterSheetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MyActionId");

                    b.HasIndex("CharacterSheetId");

                    b.ToTable("MyAction");
                });

            modelBuilder.Entity("Pathfinder2E.Mechanics.ClassDCs", b =>
                {
                    b.Property<int>("ClassDCsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Alchemist")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Barbarian")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bard")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Champion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterSheetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cleric")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Druid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fighter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Monk")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ranger")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rogue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sorcerer")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Wizard")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClassDCsId");

                    b.HasIndex("CharacterSheetId")
                        .IsUnique();

                    b.ToTable("ClassDCs");
                });

            modelBuilder.Entity("Pathfinder2E.Mechanics.Proficiencies", b =>
                {
                    b.Property<int>("ProficienciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Advanced_Weapons")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Alchemical_bombs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Arcane_Spell_Attacks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Arcane_Spell_DC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterSheetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Club")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Crossbow")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Dagger")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Divine_Spell_Attacks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Divine_Spell_DC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fortitude")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Heavy_Armor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Heavy_Crossbow")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Light_Armor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Longsword")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Martial_Weapons")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Medium_Armor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Occult_Spell_Attacks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Occult_Spell_DCs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Perception")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Primal_Spell_Attacks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Primal_Spell_DCs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rapier")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reflex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sap")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Shortbow")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Shortsword")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Simple_Weapons")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Staff")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Unarmed_Attacks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Unarmored_Defence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Will")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProficienciesId");

                    b.HasIndex("CharacterSheetId")
                        .IsUnique();

                    b.ToTable("Proficiencies");
                });

            modelBuilder.Entity("Pathfinder2E.Skills", b =>
                {
                    b.Property<int>("SkillsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Acrobatics")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Arcana")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Athletics")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterSheetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Crafting")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Deception")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Diplomacy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intimidation")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Medicine")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Nature")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Occultism")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Performance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Religion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Society")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stealth")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Survival")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Theivery")
                        .HasColumnType("INTEGER");

                    b.HasKey("SkillsId");

                    b.HasIndex("CharacterSheetId")
                        .IsUnique();

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            SkillsId = 1,
                            Acrobatics = 0,
                            Arcana = 0,
                            Athletics = 0,
                            CharacterSheetId = 1,
                            Crafting = 0,
                            Deception = 0,
                            Diplomacy = 0,
                            Intimidation = 0,
                            Medicine = 0,
                            Nature = 0,
                            Occultism = 0,
                            Performance = 0,
                            Religion = 0,
                            Society = 0,
                            Stealth = 0,
                            Survival = 0,
                            Theivery = 0
                        },
                        new
                        {
                            SkillsId = 2,
                            Acrobatics = 0,
                            Arcana = 0,
                            Athletics = 0,
                            CharacterSheetId = 2,
                            Crafting = 0,
                            Deception = 0,
                            Diplomacy = 0,
                            Intimidation = 0,
                            Medicine = 0,
                            Nature = 0,
                            Occultism = 0,
                            Performance = 0,
                            Religion = 0,
                            Society = 0,
                            Stealth = 0,
                            Survival = 0,
                            Theivery = 0
                        },
                        new
                        {
                            SkillsId = 3,
                            Acrobatics = 0,
                            Arcana = 0,
                            Athletics = 0,
                            CharacterSheetId = 3,
                            Crafting = 0,
                            Deception = 0,
                            Diplomacy = 0,
                            Intimidation = 0,
                            Medicine = 0,
                            Nature = 0,
                            Occultism = 0,
                            Performance = 0,
                            Religion = 0,
                            Society = 0,
                            Stealth = 0,
                            Survival = 0,
                            Theivery = 0
                        },
                        new
                        {
                            SkillsId = 4,
                            Acrobatics = 0,
                            Arcana = 0,
                            Athletics = 0,
                            CharacterSheetId = 4,
                            Crafting = 0,
                            Deception = 0,
                            Diplomacy = 0,
                            Intimidation = 0,
                            Medicine = 0,
                            Nature = 0,
                            Occultism = 0,
                            Performance = 0,
                            Religion = 0,
                            Society = 0,
                            Stealth = 0,
                            Survival = 0,
                            Theivery = 0
                        });
                });

            modelBuilder.Entity("Pathfinder2E.AbilityScore", b =>
                {
                    b.HasOne("Pathfinder2E.CharacterSheet", "characterSheet")
                        .WithOne("abilityScore")
                        .HasForeignKey("Pathfinder2E.AbilityScore", "CharacterSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("characterSheet");
                });

            modelBuilder.Entity("Pathfinder2E.Feat", b =>
                {
                    b.HasOne("Pathfinder2E.CharacterSheet", "CharacterSheet")
                        .WithMany("Feats")
                        .HasForeignKey("CharacterSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CharacterSheet");
                });

            modelBuilder.Entity("Pathfinder2E.Item", b =>
                {
                    b.HasOne("Pathfinder2E.CharacterSheet", "CharacterSheet")
                        .WithMany("Items")
                        .HasForeignKey("CharacterSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CharacterSheet");
                });

            modelBuilder.Entity("Pathfinder2E.Mechanics.Actions.MyAction", b =>
                {
                    b.HasOne("Pathfinder2E.CharacterSheet", "characterSheet")
                        .WithMany("actions")
                        .HasForeignKey("CharacterSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("characterSheet");
                });

            modelBuilder.Entity("Pathfinder2E.Mechanics.ClassDCs", b =>
                {
                    b.HasOne("Pathfinder2E.CharacterSheet", "characterSheet")
                        .WithOne("classDCs")
                        .HasForeignKey("Pathfinder2E.Mechanics.ClassDCs", "CharacterSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("characterSheet");
                });

            modelBuilder.Entity("Pathfinder2E.Mechanics.Proficiencies", b =>
                {
                    b.HasOne("Pathfinder2E.CharacterSheet", "characterSheet")
                        .WithOne("proficiencies")
                        .HasForeignKey("Pathfinder2E.Mechanics.Proficiencies", "CharacterSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("characterSheet");
                });

            modelBuilder.Entity("Pathfinder2E.Skills", b =>
                {
                    b.HasOne("Pathfinder2E.CharacterSheet", "characterSheet")
                        .WithOne("skills")
                        .HasForeignKey("Pathfinder2E.Skills", "CharacterSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("characterSheet");
                });

            modelBuilder.Entity("Pathfinder2E.CharacterSheet", b =>
                {
                    b.Navigation("Feats");

                    b.Navigation("Items");

                    b.Navigation("abilityScore")
                        .IsRequired();

                    b.Navigation("actions");

                    b.Navigation("classDCs")
                        .IsRequired();

                    b.Navigation("proficiencies")
                        .IsRequired();

                    b.Navigation("skills")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
