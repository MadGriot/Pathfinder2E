// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pathfinder2E;

#nullable disable

namespace Pathfinder2E.Migrations
{
    [DbContext(typeof(CharacterSheetDbContext))]
    partial class CharacterSheetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Pathfinder2E.AbilityScore", b =>
                {
                    b.Property<int>("AbilityScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterSheetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("charisma")
                        .HasColumnType("INTEGER");

                    b.Property<int>("constitution")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dexterity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("wisdom")
                        .HasColumnType("INTEGER");

                    b.HasKey("AbilityScoreId");

                    b.HasIndex("CharacterSheetId")
                        .IsUnique();

                    b.ToTable("AbilityScores");

                    b.HasData(
                        new
                        {
                            AbilityScoreId = 1,
                            CharacterSheetId = 1,
                            charisma = 10,
                            constitution = 10,
                            dexterity = 10,
                            intelligence = 10,
                            strength = 10,
                            wisdom = 10
                        },
                        new
                        {
                            AbilityScoreId = 2,
                            CharacterSheetId = 2,
                            charisma = 10,
                            constitution = 10,
                            dexterity = 10,
                            intelligence = 10,
                            strength = 10,
                            wisdom = 10
                        },
                        new
                        {
                            AbilityScoreId = 3,
                            CharacterSheetId = 3,
                            charisma = 10,
                            constitution = 10,
                            dexterity = 10,
                            intelligence = 10,
                            strength = 10,
                            wisdom = 10
                        });
                });

            modelBuilder.Entity("Pathfinder2E.CharacterSheet", b =>
                {
                    b.Property<int>("CharacterSheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ancestry")
                        .HasColumnType("INTEGER");

                    b.Property<int>("background")
                        .HasColumnType("INTEGER");

                    b.Property<int>("characterClass")
                        .HasColumnType("INTEGER");

                    b.Property<int>("currentHP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("maxHP")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterSheetId");

                    b.ToTable("CharacterSheets");

                    b.HasData(
                        new
                        {
                            CharacterSheetId = 1,
                            ancestry = 1,
                            background = 27,
                            characterClass = 8,
                            currentHP = 15,
                            firstName = "Konjit",
                            lastName = "Munaye",
                            level = 1,
                            maxHP = 15
                        },
                        new
                        {
                            CharacterSheetId = 2,
                            ancestry = 6,
                            background = 22,
                            characterClass = 1,
                            currentHP = 22,
                            firstName = "Kanandi",
                            lastName = "Oladoyinbo",
                            level = 1,
                            maxHP = 22
                        },
                        new
                        {
                            CharacterSheetId = 3,
                            ancestry = 6,
                            background = 11,
                            characterClass = 11,
                            currentHP = 14,
                            firstName = "Cris",
                            lastName = "Marcellus",
                            level = 1,
                            maxHP = 14
                        });
                });

            modelBuilder.Entity("Pathfinder2E.Feat", b =>
                {
                    b.Property<int>("FeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterSheetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("FeatId");

                    b.HasIndex("CharacterSheetId");

                    b.ToTable("Feat");
                });

            modelBuilder.Entity("Pathfinder2E.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterSheetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Name")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemId");

                    b.HasIndex("CharacterSheetId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Pathfinder2E.AbilityScore", b =>
                {
                    b.HasOne("Pathfinder2E.CharacterSheet", "characterSheet")
                        .WithOne("abilityScore")
                        .HasForeignKey("Pathfinder2E.AbilityScore", "CharacterSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("characterSheet");
                });

            modelBuilder.Entity("Pathfinder2E.Feat", b =>
                {
                    b.HasOne("Pathfinder2E.CharacterSheet", "CharacterSheet")
                        .WithMany("Feats")
                        .HasForeignKey("CharacterSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CharacterSheet");
                });

            modelBuilder.Entity("Pathfinder2E.Item", b =>
                {
                    b.HasOne("Pathfinder2E.CharacterSheet", "CharacterSheet")
                        .WithMany("Items")
                        .HasForeignKey("CharacterSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CharacterSheet");
                });

            modelBuilder.Entity("Pathfinder2E.CharacterSheet", b =>
                {
                    b.Navigation("Feats");

                    b.Navigation("Items");

                    b.Navigation("abilityScore")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
